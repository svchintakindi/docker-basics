# docker compose file to create mongo database and mongo express containers in same network
version: '3'
services:
  # my-app:
  # image: ${docker-registry}/my-app:1.0
  # ports:
  # - 3000:3000
  mongodb:
    image: mongo:5.0
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb-data:/data/db
  mongo-express:
    image: mongo-express
    restart: always # fixes MongoNetworkError when mongodb is not ready when mongo-express starts
    ports:
      - 8081:8081     # http://localhost:8081
    environment:      #https://hub.docker.com/_/mongo-express      
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb      
    depends_on:
      - mongodb
networks:
  default:
    name: mongo-network
volumes:
  mongodb-data:
    driver: local

# docker-compose -f mongo.yaml up -d   # start mongodb and mongo-express
# docker-compose -f mongo.yaml down    # release all resources   